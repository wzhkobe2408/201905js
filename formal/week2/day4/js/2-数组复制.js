/*
* 目标：
*   1. 理解数组的复制
* */

let ary = [1, 2, 3, 4, 5];

let ary2 = [
	{
		name: 1
	},
	{
		name: 2
	},
	{
		name: 3
	}
];

// 复制数组ary和ary2；

let a1 = ary.slice();
a1[1] = 100;
console.log(a1); // [1, 100, 3, 4, 5]
console.log(ary); // [1, 2, 3, 4, 5]

let a2 = ary2.slice();
a2[1].name = 100;
console.log(a2); // [{name: 1}, {name: 100}, {name: 3}]
console.log(ary2); // [{name: 1}, {name: 100}, {name: 3}]

// 一个数组中的数组项是一个基本数据类型的值时，这个数组项存储的就是这个值本身；
// 如果数组项是一个引用数据类型的值时，这个数组项实际存储的是这个引用数据类型值的堆内存地址
// 所以在复制数组时，如果数组项是基本数据类型的值，那么复制出来的新数组中的数组项和原数组中的项没关系；
// 如果复制的项是引用数据类型，再复制这一项时，其实是复制的堆内存地址，所以新复制出来的数组时一个新数组，但是数组项由于是堆内存地址，所以在操作新数组中的这一项时，原数组项也会受到影响；所以这种复制成为浅复制；